version: 2
jobs:
  build:
    docker:
      - image: quay.io/govcms/govcms-ci
    steps:
      - checkout
      - setup_remote_docker
      - run: composer validate --strict || true
      - run: .circleci/shellcheck.sh || true
      - run: .circleci/phpcs.sh || true

      # govcms/scaffold-tooling is a composer package which is somewhat
      # coupled with GovCMS/Lagoon. So this is an integration test
      # to replicate how Composer builds govcms (eg. 'composer create-project ...').
      # First we build a minimal test govcms docker environment without installing
      # Drupal. Then update the code with the new package, push it in to the
      # container and install and test Drupal.

      - run:
          name: Start amazeeio-network
          command: docker network prune -f && docker network inspect amazeeio-network >/dev/null || docker network create amazeeio-network
      - run:
          name: Setup codebase
          command: |
            touch /home/project/latest-package
            git log -4
            git checkout -b latest-package-"${CIRCLE_SHA1}"
            git clone https://github.com/govCMS/govCMS8-scaffold-paas /app
            composer --working-dir=/app config repositories.test path /home/project/latest-package
            composer --working-dir=/app require govcms/govcms:dev-latest-package-"${CIRCLE_SHA1}" --ignore-platform-reqs
      - run:
          name: Docker build
          working_directory: /app
          command: |
            docker-compose up -d mariadb
            docker-compose up -d test
            docker cp "/app/*" "$(docker-compose ps -q test)":/app
      - run:
          name: Install site
          working_directory: /app
          command: ahoy -v install -- install_configure_form.enable_update_status_module=NULL install_configure_form.enable_update_status_emails=NULL
      - run:
          name: Lint code
          working_directory: /app
          command: ahoy -v lint || true
      - run:
          name: Run Behat tests with rerun
          working_directory: /app
          command: ahoy test-behat -- --format=progress_fail || ahoy test-behat -- --format=progress_fail --rerun

